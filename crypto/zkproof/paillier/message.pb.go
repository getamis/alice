// Copyright Â© 2020 AMIS Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: github.com/getamis/alice/crypto/zkproof/paillier/message.proto

package paillier

import (
	ecpointgrouplaw "github.com/getamis/alice/crypto/ecpointgrouplaw"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://eprint.iacr.org/2021/060.pdf
// Section 2.2
type RingPederssenParameterMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Z    [][]byte `protobuf:"bytes,1,rep,name=z,proto3" json:"z,omitempty"`
	A    [][]byte `protobuf:"bytes,2,rep,name=a,proto3" json:"a,omitempty"`
	N    []byte   `protobuf:"bytes,3,opt,name=n,proto3" json:"n,omitempty"`
	S    []byte   `protobuf:"bytes,4,opt,name=s,proto3" json:"s,omitempty"`
	T    []byte   `protobuf:"bytes,5,opt,name=t,proto3" json:"t,omitempty"`
	Salt []byte   `protobuf:"bytes,6,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *RingPederssenParameterMessage) Reset() {
	*x = RingPederssenParameterMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RingPederssenParameterMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RingPederssenParameterMessage) ProtoMessage() {}

func (x *RingPederssenParameterMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RingPederssenParameterMessage.ProtoReflect.Descriptor instead.
func (*RingPederssenParameterMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{0}
}

func (x *RingPederssenParameterMessage) GetZ() [][]byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *RingPederssenParameterMessage) GetA() [][]byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *RingPederssenParameterMessage) GetN() []byte {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *RingPederssenParameterMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *RingPederssenParameterMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *RingPederssenParameterMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type PaillierBlumMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	A    [][]byte `protobuf:"bytes,1,rep,name=a,proto3" json:"a,omitempty"`
	B    [][]byte `protobuf:"bytes,2,rep,name=b,proto3" json:"b,omitempty"`
	W    []byte   `protobuf:"bytes,3,opt,name=w,proto3" json:"w,omitempty"`
	X    [][]byte `protobuf:"bytes,4,rep,name=x,proto3" json:"x,omitempty"`
	Z    [][]byte `protobuf:"bytes,5,rep,name=z,proto3" json:"z,omitempty"`
	Salt [][]byte `protobuf:"bytes,6,rep,name=salt,proto3" json:"salt,omitempty"`
}

func (x *PaillierBlumMessage) Reset() {
	*x = PaillierBlumMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaillierBlumMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaillierBlumMessage) ProtoMessage() {}

func (x *PaillierBlumMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaillierBlumMessage.ProtoReflect.Descriptor instead.
func (*PaillierBlumMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{1}
}

func (x *PaillierBlumMessage) GetA() [][]byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *PaillierBlumMessage) GetB() [][]byte {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *PaillierBlumMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *PaillierBlumMessage) GetX() [][]byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *PaillierBlumMessage) GetZ() [][]byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *PaillierBlumMessage) GetSalt() [][]byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type EncryptRangeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	A    []byte `protobuf:"bytes,3,opt,name=A,proto3" json:"A,omitempty"`
	C    []byte `protobuf:"bytes,4,opt,name=C,proto3" json:"C,omitempty"`
	Z1   string `protobuf:"bytes,5,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   []byte `protobuf:"bytes,6,opt,name=z2,proto3" json:"z2,omitempty"`
	Z3   string `protobuf:"bytes,7,opt,name=z3,proto3" json:"z3,omitempty"`
}

func (x *EncryptRangeMessage) Reset() {
	*x = EncryptRangeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRangeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRangeMessage) ProtoMessage() {}

func (x *EncryptRangeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRangeMessage.ProtoReflect.Descriptor instead.
func (*EncryptRangeMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptRangeMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *EncryptRangeMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *EncryptRangeMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *EncryptRangeMessage) GetC() []byte {
	if x != nil {
		return x.C
	}
	return nil
}

func (x *EncryptRangeMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *EncryptRangeMessage) GetZ2() []byte {
	if x != nil {
		return x.Z2
	}
	return nil
}

func (x *EncryptRangeMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

type PaillierAffAndGroupRangeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte                          `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	T    []byte                          `protobuf:"bytes,3,opt,name=T,proto3" json:"T,omitempty"`
	A    []byte                          `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	Bx   *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,5,opt,name=Bx,proto3" json:"Bx,omitempty"`
	By   []byte                          `protobuf:"bytes,6,opt,name=By,proto3" json:"By,omitempty"`
	E    []byte                          `protobuf:"bytes,7,opt,name=E,proto3" json:"E,omitempty"`
	F    []byte                          `protobuf:"bytes,8,opt,name=F,proto3" json:"F,omitempty"`
	Z1   string                          `protobuf:"bytes,9,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   string                          `protobuf:"bytes,10,opt,name=z2,proto3" json:"z2,omitempty"`
	Z3   string                          `protobuf:"bytes,11,opt,name=z3,proto3" json:"z3,omitempty"`
	Z4   string                          `protobuf:"bytes,12,opt,name=z4,proto3" json:"z4,omitempty"`
	W    []byte                          `protobuf:"bytes,13,opt,name=w,proto3" json:"w,omitempty"`
	Wy   []byte                          `protobuf:"bytes,14,opt,name=wy,proto3" json:"wy,omitempty"`
}

func (x *PaillierAffAndGroupRangeMessage) Reset() {
	*x = PaillierAffAndGroupRangeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaillierAffAndGroupRangeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaillierAffAndGroupRangeMessage) ProtoMessage() {}

func (x *PaillierAffAndGroupRangeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaillierAffAndGroupRangeMessage.ProtoReflect.Descriptor instead.
func (*PaillierAffAndGroupRangeMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{3}
}

func (x *PaillierAffAndGroupRangeMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetBx() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.Bx
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetBy() []byte {
	if x != nil {
		return x.By
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetF() []byte {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *PaillierAffAndGroupRangeMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *PaillierAffAndGroupRangeMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

func (x *PaillierAffAndGroupRangeMessage) GetZ4() string {
	if x != nil {
		return x.Z4
	}
	return ""
}

func (x *PaillierAffAndGroupRangeMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *PaillierAffAndGroupRangeMessage) GetWy() []byte {
	if x != nil {
		return x.Wy
	}
	return nil
}

type PaillierOperationAndCommitmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	T    []byte `protobuf:"bytes,3,opt,name=T,proto3" json:"T,omitempty"`
	A    []byte `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	Bx   []byte `protobuf:"bytes,5,opt,name=Bx,proto3" json:"Bx,omitempty"`
	By   []byte `protobuf:"bytes,6,opt,name=By,proto3" json:"By,omitempty"`
	E    []byte `protobuf:"bytes,7,opt,name=E,proto3" json:"E,omitempty"`
	F    []byte `protobuf:"bytes,8,opt,name=F,proto3" json:"F,omitempty"`
	Z1   string `protobuf:"bytes,9,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   string `protobuf:"bytes,10,opt,name=z2,proto3" json:"z2,omitempty"`
	Z3   string `protobuf:"bytes,11,opt,name=z3,proto3" json:"z3,omitempty"`
	Z4   string `protobuf:"bytes,12,opt,name=z4,proto3" json:"z4,omitempty"`
	W    []byte `protobuf:"bytes,13,opt,name=w,proto3" json:"w,omitempty"`
	Wx   []byte `protobuf:"bytes,14,opt,name=wx,proto3" json:"wx,omitempty"`
	Wy   []byte `protobuf:"bytes,15,opt,name=wy,proto3" json:"wy,omitempty"`
}

func (x *PaillierOperationAndCommitmentMessage) Reset() {
	*x = PaillierOperationAndCommitmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaillierOperationAndCommitmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaillierOperationAndCommitmentMessage) ProtoMessage() {}

func (x *PaillierOperationAndCommitmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaillierOperationAndCommitmentMessage.ProtoReflect.Descriptor instead.
func (*PaillierOperationAndCommitmentMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{4}
}

func (x *PaillierOperationAndCommitmentMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetBx() []byte {
	if x != nil {
		return x.Bx
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetBy() []byte {
	if x != nil {
		return x.By
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetF() []byte {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *PaillierOperationAndCommitmentMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *PaillierOperationAndCommitmentMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

func (x *PaillierOperationAndCommitmentMessage) GetZ4() string {
	if x != nil {
		return x.Z4
	}
	return ""
}

func (x *PaillierOperationAndCommitmentMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetWx() []byte {
	if x != nil {
		return x.Wx
	}
	return nil
}

func (x *PaillierOperationAndCommitmentMessage) GetWy() []byte {
	if x != nil {
		return x.Wy
	}
	return nil
}

type SimplifyPaillierOperationAndCommitmentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	T    []byte `protobuf:"bytes,3,opt,name=T,proto3" json:"T,omitempty"`
	A    []byte `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	E    []byte `protobuf:"bytes,5,opt,name=E,proto3" json:"E,omitempty"`
	F    []byte `protobuf:"bytes,6,opt,name=F,proto3" json:"F,omitempty"`
	Z1   string `protobuf:"bytes,7,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   string `protobuf:"bytes,8,opt,name=z2,proto3" json:"z2,omitempty"`
	Z3   string `protobuf:"bytes,9,opt,name=z3,proto3" json:"z3,omitempty"`
	Z4   string `protobuf:"bytes,10,opt,name=z4,proto3" json:"z4,omitempty"`
	W    []byte `protobuf:"bytes,11,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) Reset() {
	*x = SimplifyPaillierOperationAndCommitmentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimplifyPaillierOperationAndCommitmentMessage) ProtoMessage() {}

func (x *SimplifyPaillierOperationAndCommitmentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimplifyPaillierOperationAndCommitmentMessage.ProtoReflect.Descriptor instead.
func (*SimplifyPaillierOperationAndCommitmentMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{5}
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetF() []byte {
	if x != nil {
		return x.F
	}
	return nil
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetZ4() string {
	if x != nil {
		return x.Z4
	}
	return ""
}

func (x *SimplifyPaillierOperationAndCommitmentMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

type LogStarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte                          `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	A    []byte                          `protobuf:"bytes,3,opt,name=A,proto3" json:"A,omitempty"`
	Y    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,4,opt,name=Y,proto3" json:"Y,omitempty"`
	D    []byte                          `protobuf:"bytes,5,opt,name=D,proto3" json:"D,omitempty"`
	Z1   string                          `protobuf:"bytes,6,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   []byte                          `protobuf:"bytes,7,opt,name=z2,proto3" json:"z2,omitempty"`
	Z3   string                          `protobuf:"bytes,8,opt,name=z3,proto3" json:"z3,omitempty"`
}

func (x *LogStarMessage) Reset() {
	*x = LogStarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogStarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStarMessage) ProtoMessage() {}

func (x *LogStarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStarMessage.ProtoReflect.Descriptor instead.
func (*LogStarMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{6}
}

func (x *LogStarMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *LogStarMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *LogStarMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *LogStarMessage) GetY() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *LogStarMessage) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *LogStarMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *LogStarMessage) GetZ2() []byte {
	if x != nil {
		return x.Z2
	}
	return nil
}

func (x *LogStarMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

type NoSmallFactorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt    []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	P       []byte `protobuf:"bytes,2,opt,name=P,proto3" json:"P,omitempty"`
	Q       []byte `protobuf:"bytes,3,opt,name=Q,proto3" json:"Q,omitempty"`
	A       []byte `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	B       []byte `protobuf:"bytes,5,opt,name=B,proto3" json:"B,omitempty"`
	T       []byte `protobuf:"bytes,6,opt,name=T,proto3" json:"T,omitempty"`
	Sigma   string `protobuf:"bytes,7,opt,name=sigma,proto3" json:"sigma,omitempty"`
	Z1      string `protobuf:"bytes,8,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2      string `protobuf:"bytes,9,opt,name=z2,proto3" json:"z2,omitempty"`
	W1      string `protobuf:"bytes,10,opt,name=w1,proto3" json:"w1,omitempty"`
	W2      string `protobuf:"bytes,11,opt,name=w2,proto3" json:"w2,omitempty"`
	Vletter string `protobuf:"bytes,12,opt,name=vletter,proto3" json:"vletter,omitempty"`
}

func (x *NoSmallFactorMessage) Reset() {
	*x = NoSmallFactorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoSmallFactorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoSmallFactorMessage) ProtoMessage() {}

func (x *NoSmallFactorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoSmallFactorMessage.ProtoReflect.Descriptor instead.
func (*NoSmallFactorMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{7}
}

func (x *NoSmallFactorMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *NoSmallFactorMessage) GetP() []byte {
	if x != nil {
		return x.P
	}
	return nil
}

func (x *NoSmallFactorMessage) GetQ() []byte {
	if x != nil {
		return x.Q
	}
	return nil
}

func (x *NoSmallFactorMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *NoSmallFactorMessage) GetB() []byte {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *NoSmallFactorMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *NoSmallFactorMessage) GetSigma() string {
	if x != nil {
		return x.Sigma
	}
	return ""
}

func (x *NoSmallFactorMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *NoSmallFactorMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *NoSmallFactorMessage) GetW1() string {
	if x != nil {
		return x.W1
	}
	return ""
}

func (x *NoSmallFactorMessage) GetW2() string {
	if x != nil {
		return x.W2
	}
	return ""
}

func (x *NoSmallFactorMessage) GetVletter() string {
	if x != nil {
		return x.Vletter
	}
	return ""
}

type MulMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	A    []byte `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	B    []byte `protobuf:"bytes,3,opt,name=B,proto3" json:"B,omitempty"`
	Z    string `protobuf:"bytes,4,opt,name=z,proto3" json:"z,omitempty"`
	U    []byte `protobuf:"bytes,5,opt,name=u,proto3" json:"u,omitempty"`
	V    []byte `protobuf:"bytes,6,opt,name=v,proto3" json:"v,omitempty"`
}

func (x *MulMessage) Reset() {
	*x = MulMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulMessage) ProtoMessage() {}

func (x *MulMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulMessage.ProtoReflect.Descriptor instead.
func (*MulMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{8}
}

func (x *MulMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *MulMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *MulMessage) GetB() []byte {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *MulMessage) GetZ() string {
	if x != nil {
		return x.Z
	}
	return ""
}

func (x *MulMessage) GetU() []byte {
	if x != nil {
		return x.U
	}
	return nil
}

func (x *MulMessage) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

type DecryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt  []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S     []byte `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	T     []byte `protobuf:"bytes,3,opt,name=T,proto3" json:"T,omitempty"`
	A     []byte `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	Gamma []byte `protobuf:"bytes,5,opt,name=gamma,proto3" json:"gamma,omitempty"`
	Z1    string `protobuf:"bytes,6,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2    string `protobuf:"bytes,7,opt,name=z2,proto3" json:"z2,omitempty"`
	W     []byte `protobuf:"bytes,8,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *DecryMessage) Reset() {
	*x = DecryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryMessage) ProtoMessage() {}

func (x *DecryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryMessage.ProtoReflect.Descriptor instead.
func (*DecryMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{9}
}

func (x *DecryMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *DecryMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *DecryMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *DecryMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *DecryMessage) GetGamma() []byte {
	if x != nil {
		return x.Gamma
	}
	return nil
}

func (x *DecryMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *DecryMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *DecryMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

type MulStarMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	E    []byte                          `protobuf:"bytes,2,opt,name=E,proto3" json:"E,omitempty"`
	S    []byte                          `protobuf:"bytes,3,opt,name=S,proto3" json:"S,omitempty"`
	A    []byte                          `protobuf:"bytes,4,opt,name=A,proto3" json:"A,omitempty"`
	B    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,5,opt,name=B,proto3" json:"B,omitempty"`
	Z1   string                          `protobuf:"bytes,6,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   string                          `protobuf:"bytes,7,opt,name=z2,proto3" json:"z2,omitempty"`
	W    []byte                          `protobuf:"bytes,8,opt,name=w,proto3" json:"w,omitempty"`
}

func (x *MulStarMessage) Reset() {
	*x = MulStarMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulStarMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulStarMessage) ProtoMessage() {}

func (x *MulStarMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulStarMessage.ProtoReflect.Descriptor instead.
func (*MulStarMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{10}
}

func (x *MulStarMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *MulStarMessage) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

func (x *MulStarMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *MulStarMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *MulStarMessage) GetB() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *MulStarMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *MulStarMessage) GetZ2() string {
	if x != nil {
		return x.Z2
	}
	return ""
}

func (x *MulStarMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

type EncElgMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	S    []byte                          `protobuf:"bytes,2,opt,name=S,proto3" json:"S,omitempty"`
	T    []byte                          `protobuf:"bytes,3,opt,name=T,proto3" json:"T,omitempty"`
	D    []byte                          `protobuf:"bytes,4,opt,name=D,proto3" json:"D,omitempty"`
	Y    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,5,opt,name=Y,proto3" json:"Y,omitempty"`
	Z    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,6,opt,name=Z,proto3" json:"Z,omitempty"`
	Z1   string                          `protobuf:"bytes,7,opt,name=z1,proto3" json:"z1,omitempty"`
	Z2   []byte                          `protobuf:"bytes,8,opt,name=z2,proto3" json:"z2,omitempty"`
	W    []byte                          `protobuf:"bytes,9,opt,name=w,proto3" json:"w,omitempty"`
	Z3   string                          `protobuf:"bytes,10,opt,name=z3,proto3" json:"z3,omitempty"`
}

func (x *EncElgMessage) Reset() {
	*x = EncElgMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncElgMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncElgMessage) ProtoMessage() {}

func (x *EncElgMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncElgMessage.ProtoReflect.Descriptor instead.
func (*EncElgMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{11}
}

func (x *EncElgMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *EncElgMessage) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *EncElgMessage) GetT() []byte {
	if x != nil {
		return x.T
	}
	return nil
}

func (x *EncElgMessage) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *EncElgMessage) GetY() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.Y
	}
	return nil
}

func (x *EncElgMessage) GetZ() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *EncElgMessage) GetZ1() string {
	if x != nil {
		return x.Z1
	}
	return ""
}

func (x *EncElgMessage) GetZ2() []byte {
	if x != nil {
		return x.Z2
	}
	return nil
}

func (x *EncElgMessage) GetW() []byte {
	if x != nil {
		return x.W
	}
	return nil
}

func (x *EncElgMessage) GetZ3() string {
	if x != nil {
		return x.Z3
	}
	return ""
}

type ELogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	A    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	B    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,3,opt,name=B,proto3" json:"B,omitempty"`
	N    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,4,opt,name=N,proto3" json:"N,omitempty"`
	Z    []byte                          `protobuf:"bytes,5,opt,name=z,proto3" json:"z,omitempty"`
	U    []byte                          `protobuf:"bytes,6,opt,name=u,proto3" json:"u,omitempty"`
}

func (x *ELogMessage) Reset() {
	*x = ELogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ELogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ELogMessage) ProtoMessage() {}

func (x *ELogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ELogMessage.ProtoReflect.Descriptor instead.
func (*ELogMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{12}
}

func (x *ELogMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *ELogMessage) GetA() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *ELogMessage) GetB() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *ELogMessage) GetN() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.N
	}
	return nil
}

func (x *ELogMessage) GetZ() []byte {
	if x != nil {
		return x.Z
	}
	return nil
}

func (x *ELogMessage) GetU() []byte {
	if x != nil {
		return x.U
	}
	return nil
}

type NthRootMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	A    []byte `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	Z1   []byte `protobuf:"bytes,3,opt,name=z1,proto3" json:"z1,omitempty"`
}

func (x *NthRootMessage) Reset() {
	*x = NthRootMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NthRootMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NthRootMessage) ProtoMessage() {}

func (x *NthRootMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NthRootMessage.ProtoReflect.Descriptor instead.
func (*NthRootMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{13}
}

func (x *NthRootMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *NthRootMessage) GetA() []byte {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *NthRootMessage) GetZ1() []byte {
	if x != nil {
		return x.Z1
	}
	return nil
}

type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt []byte                          `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	A    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,2,opt,name=A,proto3" json:"A,omitempty"`
	B    *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,3,opt,name=B,proto3" json:"B,omitempty"`
	Z    []byte                          `protobuf:"bytes,4,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP(), []int{14}
}

func (x *LogMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *LogMessage) GetA() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.A
	}
	return nil
}

func (x *LogMessage) GetB() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.B
	}
	return nil
}

func (x *LogMessage) GetZ() []byte {
	if x != nil {
		return x.Z
	}
	return nil
}

var File_github_com_getamis_alice_crypto_zkproof_paillier_message_proto protoreflect.FileDescriptor

var file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2f, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2f, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69,
	0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61,
	0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x65, 0x63, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x1d, 0x52, 0x69, 0x6e, 0x67, 0x50,
	0x65, 0x64, 0x65, 0x72, 0x73, 0x73, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x73,
	0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x50, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x42, 0x6c,
	0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x01, 0x62, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x77, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53, 0x12, 0x0c, 0x0a,
	0x01, 0x41, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01, 0x43,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x33, 0x22, 0x9a, 0x02, 0x0a, 0x1f, 0x50, 0x61,
	0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x41, 0x66, 0x66, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53, 0x12,
	0x0c, 0x0a, 0x01, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x54, 0x12, 0x0c, 0x0a,
	0x01, 0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x2f, 0x0a, 0x02, 0x42,
	0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x42, 0x78, 0x12, 0x0e, 0x0a, 0x02,
	0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x42, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x45, 0x12, 0x0c, 0x0a, 0x01, 0x46, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x46, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x79, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x77, 0x79, 0x22, 0x8f, 0x02, 0x0a, 0x25, 0x50, 0x61, 0x69, 0x6c, 0x6c,
	0x69, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x53, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x54,
	0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0e,
	0x0a, 0x02, 0x42, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x42, 0x78, 0x12, 0x0e,
	0x0a, 0x02, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x42, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x45, 0x12, 0x0c, 0x0a, 0x01,
	0x46, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x46, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x34,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x78, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x77, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x77, 0x79, 0x22, 0xd7, 0x01, 0x0a, 0x2d, 0x73, 0x69, 0x6d,
	0x70, 0x6c, 0x69, 0x66, 0x79, 0x50, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c,
	0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53, 0x12, 0x0c, 0x0a, 0x01,
	0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x54, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01, 0x45, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x01, 0x45, 0x12, 0x0c, 0x0a, 0x01, 0x46, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x01, 0x46, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x7a, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x7a, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x77, 0x22, 0xad, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x2d, 0x0a, 0x01, 0x59, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c,
	0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x7a, 0x33, 0x22, 0xe0, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x50, 0x12, 0x0c, 0x0a,
	0x01, 0x51, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x51, 0x12, 0x0c, 0x0a, 0x01, 0x41,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x42, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x54, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x7a,
	0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a,
	0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x77,
	0x31, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x77, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x77,
	0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x77, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x0a, 0x4d, 0x75, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0c, 0x0a, 0x01, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x42, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x7a, 0x12, 0x0c, 0x0a, 0x01, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x75, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x76, 0x22, 0x90, 0x01,
	0x0a, 0x0c, 0x44, 0x65, 0x63, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x53,
	0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x54, 0x12, 0x0c,
	0x0a, 0x01, 0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x61, 0x6d, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x67, 0x61, 0x6d,
	0x6d, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x7a, 0x32, 0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x77,
	0x22, 0xab, 0x01, 0x0a, 0x0e, 0x4d, 0x75, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x45, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x45, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x53, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x41, 0x12, 0x2d, 0x0a, 0x01, 0x42, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x63, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45,
	0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x42,
	0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31,
	0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x32,
	0x12, 0x0c, 0x0a, 0x01, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x22, 0xe9,
	0x01, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x45, 0x6c, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x53, 0x12, 0x0c, 0x0a, 0x01, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x54,
	0x12, 0x0c, 0x0a, 0x01, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x44, 0x12, 0x2d,
	0x0a, 0x01, 0x59, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x59, 0x12, 0x2d, 0x0a,
	0x01, 0x5a, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x5a, 0x12, 0x0e, 0x0a, 0x02,
	0x7a, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x31, 0x12, 0x0e, 0x0a, 0x02,
	0x7a, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x7a, 0x32, 0x12, 0x0c, 0x0a, 0x01,
	0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x33,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x7a, 0x33, 0x22, 0xca, 0x01, 0x0a, 0x0b, 0x45,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x2d,
	0x0a, 0x01, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x41, 0x12, 0x2d, 0x0a,
	0x01, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x42, 0x12, 0x2d, 0x0a, 0x01,
	0x4e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x4e, 0x12, 0x0c, 0x0a, 0x01, 0x7a,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x12, 0x0c, 0x0a, 0x01, 0x75, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x75, 0x22, 0x42, 0x0a, 0x0e, 0x4e, 0x74, 0x68, 0x52, 0x6f,
	0x6f, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x41, 0x12, 0x0e, 0x0a, 0x02, 0x7a,
	0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x7a, 0x31, 0x22, 0x8c, 0x01, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x2d,
	0x0a, 0x01, 0x41, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x41, 0x12, 0x2d, 0x0a,
	0x01, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x42, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x7a, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73,
	0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x7a, 0x6b,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2f, 0x70, 0x61, 0x69, 0x6c, 0x6c, 0x69, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescOnce sync.Once
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescData = file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDesc
)

func file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescGZIP() []byte {
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescOnce.Do(func() {
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescData)
	})
	return file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDescData
}

var file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_goTypes = []interface{}{
	(*RingPederssenParameterMessage)(nil),                 // 0: paillier.RingPederssenParameterMessage
	(*PaillierBlumMessage)(nil),                           // 1: paillier.PaillierBlumMessage
	(*EncryptRangeMessage)(nil),                           // 2: paillier.EncryptRangeMessage
	(*PaillierAffAndGroupRangeMessage)(nil),               // 3: paillier.PaillierAffAndGroupRangeMessage
	(*PaillierOperationAndCommitmentMessage)(nil),         // 4: paillier.PaillierOperationAndCommitmentMessage
	(*SimplifyPaillierOperationAndCommitmentMessage)(nil), // 5: paillier.simplifyPaillierOperationAndCommitmentMessage
	(*LogStarMessage)(nil),                                // 6: paillier.LogStarMessage
	(*NoSmallFactorMessage)(nil),                          // 7: paillier.NoSmallFactorMessage
	(*MulMessage)(nil),                                    // 8: paillier.MulMessage
	(*DecryMessage)(nil),                                  // 9: paillier.DecryMessage
	(*MulStarMessage)(nil),                                // 10: paillier.MulStarMessage
	(*EncElgMessage)(nil),                                 // 11: paillier.EncElgMessage
	(*ELogMessage)(nil),                                   // 12: paillier.ELogMessage
	(*NthRootMessage)(nil),                                // 13: paillier.NthRootMessage
	(*LogMessage)(nil),                                    // 14: paillier.LogMessage
	(*ecpointgrouplaw.EcPointMessage)(nil),                // 15: ecpointgrouplaw.EcPointMessage
}
var file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_depIdxs = []int32{
	15, // 0: paillier.PaillierAffAndGroupRangeMessage.Bx:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 1: paillier.LogStarMessage.Y:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 2: paillier.MulStarMessage.B:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 3: paillier.EncElgMessage.Y:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 4: paillier.EncElgMessage.Z:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 5: paillier.ELogMessage.A:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 6: paillier.ELogMessage.B:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 7: paillier.ELogMessage.N:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 8: paillier.LogMessage.A:type_name -> ecpointgrouplaw.EcPointMessage
	15, // 9: paillier.LogMessage.B:type_name -> ecpointgrouplaw.EcPointMessage
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_init() }
func file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_init() {
	if File_github_com_getamis_alice_crypto_zkproof_paillier_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RingPederssenParameterMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaillierBlumMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptRangeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaillierAffAndGroupRangeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaillierOperationAndCommitmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimplifyPaillierOperationAndCommitmentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogStarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoSmallFactorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulStarMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncElgMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ELogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NthRootMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_goTypes,
		DependencyIndexes: file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_depIdxs,
		MessageInfos:      file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_msgTypes,
	}.Build()
	File_github_com_getamis_alice_crypto_zkproof_paillier_message_proto = out.File
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_rawDesc = nil
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_goTypes = nil
	file_github_com_getamis_alice_crypto_zkproof_paillier_message_proto_depIdxs = nil
}
