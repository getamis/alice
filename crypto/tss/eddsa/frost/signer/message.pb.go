// Copyright Â© 2022 AMIS Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: github.com/getamis/alice/crypto/tss/eddsa/frost/signer/message.proto

package signer

import (
	ecpointgrouplaw "github.com/getamis/alice/crypto/ecpointgrouplaw"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_Round1 Type = 0
	Type_Round2 Type = 1
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "Round1",
		1: "Round2",
	}
	Type_value = map[string]int32{
		"Round1": 0,
		"Round2": 1,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Type   `protobuf:"varint,1,opt,name=type,proto3,enum=getamis.alice.crypto.tss.eddsa.frost.signer.Type" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Body:
	//	*Message_Round1
	//	*Message_Round2
	Body isMessage_Body `protobuf_oneof:"body"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Round1
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Message) GetRound1() *BodyRound1 {
	if x, ok := x.GetBody().(*Message_Round1); ok {
		return x.Round1
	}
	return nil
}

func (x *Message) GetRound2() *BodyRound2 {
	if x, ok := x.GetBody().(*Message_Round2); ok {
		return x.Round2
	}
	return nil
}

type isMessage_Body interface {
	isMessage_Body()
}

type Message_Round1 struct {
	Round1 *BodyRound1 `protobuf:"bytes,4,opt,name=round1,proto3,oneof"`
}

type Message_Round2 struct {
	Round2 *BodyRound2 `protobuf:"bytes,5,opt,name=round2,proto3,oneof"`
}

func (*Message_Round1) isMessage_Body() {}

func (*Message_Round2) isMessage_Body() {}

type BodyRound1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,1,opt,name=D,proto3" json:"D,omitempty"`
	E *ecpointgrouplaw.EcPointMessage `protobuf:"bytes,2,opt,name=E,proto3" json:"E,omitempty"`
}

func (x *BodyRound1) Reset() {
	*x = BodyRound1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyRound1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyRound1) ProtoMessage() {}

func (x *BodyRound1) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyRound1.ProtoReflect.Descriptor instead.
func (*BodyRound1) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP(), []int{1}
}

func (x *BodyRound1) GetD() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *BodyRound1) GetE() *ecpointgrouplaw.EcPointMessage {
	if x != nil {
		return x.E
	}
	return nil
}

type BodyRound2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zi []byte `protobuf:"bytes,1,opt,name=zi,proto3" json:"zi,omitempty"`
}

func (x *BodyRound2) Reset() {
	*x = BodyRound2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyRound2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyRound2) ProtoMessage() {}

func (x *BodyRound2) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyRound2.ProtoReflect.Descriptor instead.
func (*BodyRound2) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP(), []int{2}
}

func (x *BodyRound2) GetZi() []byte {
	if x != nil {
		return x.Zi
	}
	return nil
}

type BMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X []byte `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	D []byte `protobuf:"bytes,2,opt,name=D,proto3" json:"D,omitempty"`
	E []byte `protobuf:"bytes,3,opt,name=E,proto3" json:"E,omitempty"`
}

func (x *BMessage) Reset() {
	*x = BMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BMessage) ProtoMessage() {}

func (x *BMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BMessage.ProtoReflect.Descriptor instead.
func (*BMessage) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP(), []int{3}
}

func (x *BMessage) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *BMessage) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

func (x *BMessage) GetE() []byte {
	if x != nil {
		return x.E
	}
	return nil
}

var File_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto protoreflect.FileDescriptor

var file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDesc = []byte{
	0x0a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x65, 0x64, 0x64, 0x73, 0x61, 0x2f, 0x66, 0x72, 0x6f, 0x73,
	0x74, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2e,
	0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x73, 0x73,
	0x2e, 0x65, 0x64, 0x64, 0x73, 0x61, 0x2e, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x1a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2f, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x6c, 0x61, 0x77, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8e, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x67, 0x65, 0x74,
	0x61, 0x6d, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x74, 0x73, 0x73, 0x2e, 0x65, 0x64, 0x64, 0x73, 0x61, 0x2e, 0x66, 0x72, 0x6f, 0x73,
	0x74, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2e, 0x61, 0x6c,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x73, 0x73, 0x2e, 0x65,
	0x64, 0x64, 0x73, 0x61, 0x2e, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x12, 0x51, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x32,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73,
	0x2e, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x74, 0x73,
	0x73, 0x2e, 0x65, 0x64, 0x64, 0x73, 0x61, 0x2e, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x22, 0x94, 0x01, 0x0a, 0x0a, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31,
	0x12, 0x42, 0x0a, 0x01, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x65,
	0x74, 0x61, 0x6d, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6c,
	0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x01, 0x44, 0x12, 0x42, 0x0a, 0x01, 0x45, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x65, 0x63, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x6c, 0x61, 0x77, 0x2e, 0x45, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x01, 0x45, 0x22, 0x1c, 0x0a, 0x0a, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x7a, 0x69, 0x22, 0x34, 0x0a, 0x08, 0x42, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x44, 0x12, 0x0c,
	0x0a, 0x01, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x45, 0x2a, 0x1e, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x31, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x10, 0x01, 0x42, 0x38, 0x5a, 0x36,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d,
	0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f,
	0x74, 0x73, 0x73, 0x2f, 0x65, 0x64, 0x64, 0x73, 0x61, 0x2f, 0x66, 0x72, 0x6f, 0x73, 0x74, 0x2f,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescOnce sync.Once
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescData = file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDesc
)

func file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescGZIP() []byte {
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescOnce.Do(func() {
		file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescData)
	})
	return file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDescData
}

var file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_goTypes = []interface{}{
	(Type)(0),                              // 0: getamis.alice.crypto.tss.eddsa.frost.signer.Type
	(*Message)(nil),                        // 1: getamis.alice.crypto.tss.eddsa.frost.signer.Message
	(*BodyRound1)(nil),                     // 2: getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound1
	(*BodyRound2)(nil),                     // 3: getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound2
	(*BMessage)(nil),                       // 4: getamis.alice.crypto.tss.eddsa.frost.signer.BMessage
	(*ecpointgrouplaw.EcPointMessage)(nil), // 5: getamis.alice.crypto.ecpointgrouplaw.EcPointMessage
}
var file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_depIdxs = []int32{
	0, // 0: getamis.alice.crypto.tss.eddsa.frost.signer.Message.type:type_name -> getamis.alice.crypto.tss.eddsa.frost.signer.Type
	2, // 1: getamis.alice.crypto.tss.eddsa.frost.signer.Message.round1:type_name -> getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound1
	3, // 2: getamis.alice.crypto.tss.eddsa.frost.signer.Message.round2:type_name -> getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound2
	5, // 3: getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound1.D:type_name -> getamis.alice.crypto.ecpointgrouplaw.EcPointMessage
	5, // 4: getamis.alice.crypto.tss.eddsa.frost.signer.BodyRound1.E:type_name -> getamis.alice.crypto.ecpointgrouplaw.EcPointMessage
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_init() }
func file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_init() {
	if File_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyRound1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyRound2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Round1)(nil),
		(*Message_Round2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_goTypes,
		DependencyIndexes: file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_depIdxs,
		EnumInfos:         file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_enumTypes,
		MessageInfos:      file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_msgTypes,
	}.Build()
	File_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto = out.File
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_rawDesc = nil
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_goTypes = nil
	file_github_com_getamis_alice_crypto_tss_eddsa_frost_signer_message_proto_depIdxs = nil
}
