// Copyright Â© 2020 AMIS Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: github.com/getamis/alice/crypto/tss/dkg/message.proto

package dkg

import (
	birkhoffinterpolation "github.com/getamis/alice/crypto/birkhoffinterpolation"
	commitment "github.com/getamis/alice/crypto/commitment"
	zkproof "github.com/getamis/alice/crypto/zkproof"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_Peer     Type = 0
	Type_Decommit Type = 1
	Type_Verify   Type = 2
	Type_Result   Type = 3
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0: "Peer",
		1: "Decommit",
		2: "Verify",
		3: "Result",
	}
	Type_value = map[string]int32{
		"Peer":     0,
		"Decommit": 1,
		"Verify":   2,
		"Result":   3,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{0}
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Type   `protobuf:"varint,1,opt,name=type,proto3,enum=dkg.Type" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Body:
	//	*Message_Peer
	//	*Message_Decommit
	//	*Message_Verify
	//	*Message_Result
	Body isMessage_Body `protobuf_oneof:"body"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_Peer
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Message) GetBody() isMessage_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Message) GetPeer() *BodyPeer {
	if x, ok := x.GetBody().(*Message_Peer); ok {
		return x.Peer
	}
	return nil
}

func (x *Message) GetDecommit() *BodyDecommit {
	if x, ok := x.GetBody().(*Message_Decommit); ok {
		return x.Decommit
	}
	return nil
}

func (x *Message) GetVerify() *BodyVerify {
	if x, ok := x.GetBody().(*Message_Verify); ok {
		return x.Verify
	}
	return nil
}

func (x *Message) GetResult() *BodyResult {
	if x, ok := x.GetBody().(*Message_Result); ok {
		return x.Result
	}
	return nil
}

type isMessage_Body interface {
	isMessage_Body()
}

type Message_Peer struct {
	Peer *BodyPeer `protobuf:"bytes,3,opt,name=peer,proto3,oneof"`
}

type Message_Decommit struct {
	Decommit *BodyDecommit `protobuf:"bytes,4,opt,name=decommit,proto3,oneof"`
}

type Message_Verify struct {
	Verify *BodyVerify `protobuf:"bytes,5,opt,name=verify,proto3,oneof"`
}

type Message_Result struct {
	Result *BodyResult `protobuf:"bytes,6,opt,name=result,proto3,oneof"`
}

func (*Message_Peer) isMessage_Body() {}

func (*Message_Decommit) isMessage_Body() {}

func (*Message_Verify) isMessage_Body() {}

func (*Message_Result) isMessage_Body() {}

type BodyPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bk         *birkhoffinterpolation.BkParameterMessage `protobuf:"bytes,1,opt,name=bk,proto3" json:"bk,omitempty"`
	Commitment *commitment.HashCommitmentMessage         `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
}

func (x *BodyPeer) Reset() {
	*x = BodyPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyPeer) ProtoMessage() {}

func (x *BodyPeer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyPeer.ProtoReflect.Descriptor instead.
func (*BodyPeer) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{1}
}

func (x *BodyPeer) GetBk() *birkhoffinterpolation.BkParameterMessage {
	if x != nil {
		return x.Bk
	}
	return nil
}

func (x *BodyPeer) GetCommitment() *commitment.HashCommitmentMessage {
	if x != nil {
		return x.Commitment
	}
	return nil
}

type BodyDecommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashDecommitment *commitment.HashDecommitmentMessage `protobuf:"bytes,1,opt,name=hashDecommitment,proto3" json:"hashDecommitment,omitempty"`
	PointCommitment  *commitment.PointCommitmentMessage  `protobuf:"bytes,2,opt,name=pointCommitment,proto3" json:"pointCommitment,omitempty"`
}

func (x *BodyDecommit) Reset() {
	*x = BodyDecommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyDecommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyDecommit) ProtoMessage() {}

func (x *BodyDecommit) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyDecommit.ProtoReflect.Descriptor instead.
func (*BodyDecommit) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{2}
}

func (x *BodyDecommit) GetHashDecommitment() *commitment.HashDecommitmentMessage {
	if x != nil {
		return x.HashDecommitment
	}
	return nil
}

func (x *BodyDecommit) GetPointCommitment() *commitment.PointCommitmentMessage {
	if x != nil {
		return x.PointCommitment
	}
	return nil
}

type BodyVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verify *commitment.FeldmanVerifyMessage `protobuf:"bytes,1,opt,name=verify,proto3" json:"verify,omitempty"`
}

func (x *BodyVerify) Reset() {
	*x = BodyVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyVerify) ProtoMessage() {}

func (x *BodyVerify) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyVerify.ProtoReflect.Descriptor instead.
func (*BodyVerify) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{3}
}

func (x *BodyVerify) GetVerify() *commitment.FeldmanVerifyMessage {
	if x != nil {
		return x.Verify
	}
	return nil
}

type BodyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiGProofMsg *zkproof.SchnorrProofMessage `protobuf:"bytes,1,opt,name=siGProofMsg,proto3" json:"siGProofMsg,omitempty"`
}

func (x *BodyResult) Reset() {
	*x = BodyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BodyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BodyResult) ProtoMessage() {}

func (x *BodyResult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BodyResult.ProtoReflect.Descriptor instead.
func (*BodyResult) Descriptor() ([]byte, []int) {
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP(), []int{4}
}

func (x *BodyResult) GetSiGProofMsg() *zkproof.SchnorrProofMessage {
	if x != nil {
		return x.SiGProofMsg
	}
	return nil
}

var File_github_com_getamis_alice_crypto_tss_dkg_message_proto protoreflect.FileDescriptor

var file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDesc = []byte{
	0x0a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74,
	0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x64, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x64, 0x6b, 0x67, 0x1a, 0x3e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73,
	0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x62, 0x69,
	0x72, 0x6b, 0x68, 0x6f, 0x66, 0x66, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x62, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73,
	0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63, 0x65,
	0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xec, 0x01,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x64, 0x6b, 0x67, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6b, 0x67, 0x2e, 0x42, 0x6f, 0x64,
	0x79, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x2f, 0x0a,
	0x08, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x64, 0x6b, 0x67, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x64, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x29,
	0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x64, 0x6b, 0x67, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x6b, 0x67, 0x2e,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x88, 0x01, 0x0a,
	0x08, 0x42, 0x6f, 0x64, 0x79, 0x50, 0x65, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x02, 0x62, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x72, 0x6b, 0x68, 0x6f, 0x66, 0x66,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6b,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x02, 0x62, 0x6b, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0c, 0x42, 0x6f, 0x64, 0x79,
	0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x4f, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x68,
	0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x48, 0x61, 0x73, 0x68, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x10, 0x68, 0x61, 0x73, 0x68, 0x44, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x0f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0a, 0x42, 0x6f, 0x64, 0x79, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x38, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x46, 0x65, 0x6c, 0x64, 0x6d, 0x61, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22,
	0x4c, 0x0a, 0x0a, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a,
	0x0b, 0x73, 0x69, 0x47, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x6b, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x53, 0x63, 0x68,
	0x6e, 0x6f, 0x72, 0x72, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0b, 0x73, 0x69, 0x47, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x4d, 0x73, 0x67, 0x2a, 0x36, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x10, 0x03, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x61, 0x6d, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x69, 0x63,
	0x65, 0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x74, 0x73, 0x73, 0x2f, 0x64, 0x6b, 0x67,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescOnce sync.Once
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescData = file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDesc
)

func file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescGZIP() []byte {
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescOnce.Do(func() {
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescData)
	})
	return file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDescData
}

var file_github_com_getamis_alice_crypto_tss_dkg_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_getamis_alice_crypto_tss_dkg_message_proto_goTypes = []interface{}{
	(Type)(0),            // 0: dkg.Type
	(*Message)(nil),      // 1: dkg.Message
	(*BodyPeer)(nil),     // 2: dkg.BodyPeer
	(*BodyDecommit)(nil), // 3: dkg.BodyDecommit
	(*BodyVerify)(nil),   // 4: dkg.BodyVerify
	(*BodyResult)(nil),   // 5: dkg.BodyResult
	(*birkhoffinterpolation.BkParameterMessage)(nil), // 6: birkhoffinterpolation.BkParameterMessage
	(*commitment.HashCommitmentMessage)(nil),         // 7: commitment.HashCommitmentMessage
	(*commitment.HashDecommitmentMessage)(nil),       // 8: commitment.HashDecommitmentMessage
	(*commitment.PointCommitmentMessage)(nil),        // 9: commitment.PointCommitmentMessage
	(*commitment.FeldmanVerifyMessage)(nil),          // 10: commitment.FeldmanVerifyMessage
	(*zkproof.SchnorrProofMessage)(nil),              // 11: zkproof.SchnorrProofMessage
}
var file_github_com_getamis_alice_crypto_tss_dkg_message_proto_depIdxs = []int32{
	0,  // 0: dkg.Message.type:type_name -> dkg.Type
	2,  // 1: dkg.Message.peer:type_name -> dkg.BodyPeer
	3,  // 2: dkg.Message.decommit:type_name -> dkg.BodyDecommit
	4,  // 3: dkg.Message.verify:type_name -> dkg.BodyVerify
	5,  // 4: dkg.Message.result:type_name -> dkg.BodyResult
	6,  // 5: dkg.BodyPeer.bk:type_name -> birkhoffinterpolation.BkParameterMessage
	7,  // 6: dkg.BodyPeer.commitment:type_name -> commitment.HashCommitmentMessage
	8,  // 7: dkg.BodyDecommit.hashDecommitment:type_name -> commitment.HashDecommitmentMessage
	9,  // 8: dkg.BodyDecommit.pointCommitment:type_name -> commitment.PointCommitmentMessage
	10, // 9: dkg.BodyVerify.verify:type_name -> commitment.FeldmanVerifyMessage
	11, // 10: dkg.BodyResult.siGProofMsg:type_name -> zkproof.SchnorrProofMessage
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_getamis_alice_crypto_tss_dkg_message_proto_init() }
func file_github_com_getamis_alice_crypto_tss_dkg_message_proto_init() {
	if File_github_com_getamis_alice_crypto_tss_dkg_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyDecommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BodyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Message_Peer)(nil),
		(*Message_Decommit)(nil),
		(*Message_Verify)(nil),
		(*Message_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_getamis_alice_crypto_tss_dkg_message_proto_goTypes,
		DependencyIndexes: file_github_com_getamis_alice_crypto_tss_dkg_message_proto_depIdxs,
		EnumInfos:         file_github_com_getamis_alice_crypto_tss_dkg_message_proto_enumTypes,
		MessageInfos:      file_github_com_getamis_alice_crypto_tss_dkg_message_proto_msgTypes,
	}.Build()
	File_github_com_getamis_alice_crypto_tss_dkg_message_proto = out.File
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_rawDesc = nil
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_goTypes = nil
	file_github_com_getamis_alice_crypto_tss_dkg_message_proto_depIdxs = nil
}
